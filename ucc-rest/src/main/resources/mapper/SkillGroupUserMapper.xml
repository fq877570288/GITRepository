<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cucsi.bsd.ucc.common.mapper.SkillGroupUserMapper" >
  <resultMap id="BaseResultMap" type="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <id column="skill_group_id" property="skillGroupId" jdbcType="VARCHAR" />
    <result column="created_nick_name" property="createdNickName" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_user_id" property="createdUserId" jdbcType="VARCHAR" />
    <result column="created_user_name" property="createdUserName" jdbcType="VARCHAR" />
    <result column="groupName" property="groupName" jdbcType="VARCHAR" />
    <result column="updated_nick_name" property="updatedNickName" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_user_id" property="updatedUserId" jdbcType="VARCHAR" />
    <result column="updated_user_name" property="updatedUserName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="deptName" property="deptName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, skill_group_id, created_nick_name, created_time, created_user_id, created_user_name, 
    group_name, updated_nick_name, updated_time, updated_user_id, updated_user_name, 
    user_name, nick_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.SkillGroupUserCriteria" >
      SELECT
      sgu.user_id,
      sgu.skill_group_id,
      uu.user_name,
      uu.nick_name,
      usg.skill_group_name AS groupName,
      GROUP_CONCAT(
          depts.dept_name SEPARATOR ","
      ) AS deptName
      FROM
      skill_group_user sgu
      LEFT JOIN ucc_users uu ON sgu.user_id = uu.user_id
      LEFT JOIN ucc_skill_group usg ON sgu.skill_group_id = usg.skill_group_id
      LEFT JOIN (
          SELECT
              ud.user_id,
              uccd.dept_id,
              uccd.dept_name
          FROM
              user_dept ud
          INNER JOIN ucc_depts uccd ON ud.dept_id = uccd.dept_id
      ) depts ON depts.user_id = sgu.user_id
     WHERE 1=1
     <if test="skillGroupId != null and skillGroupId!=''" >
        AND sgu.skill_group_id=#{skillGroupId,jdbcType=VARCHAR}
     </if>
     GROUP BY
     sgu.user_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    delete from skill_group_user
    where skill_group_id = #{skillGroupId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    insert into skill_group_user (user_id, skill_group_id, created_nick_name, 
      created_time, created_user_id, created_user_name, 
      group_name, updated_nick_name, updated_time, 
      updated_user_id, updated_user_name, user_name, 
      nick_name)
    values (#{userId,jdbcType=VARCHAR}, #{skillGroupId,jdbcType=VARCHAR}, #{createdNickName,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{createdUserId,jdbcType=VARCHAR}, #{createdUserName,jdbcType=VARCHAR}, 
      #{groupName,jdbcType=VARCHAR}, #{updatedNickName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedUserId,jdbcType=VARCHAR}, #{updatedUserName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    insert into skill_group_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="skillGroupId != null" >
        skill_group_id,
      </if>
      <if test="createdNickName != null" >
        created_nick_name,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUserId != null" >
        created_user_id,
      </if>
      <if test="createdUserName != null" >
        created_user_name,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="updatedNickName != null" >
        updated_nick_name,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedUserId != null" >
        updated_user_id,
      </if>
      <if test="updatedUserName != null" >
        updated_user_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="skillGroupId != null" >
        #{skillGroupId,jdbcType=VARCHAR},
      </if>
      <if test="createdNickName != null" >
        #{createdNickName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null" >
        #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="updatedNickName != null" >
        #{updatedNickName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null" >
        #{updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    update skill_group_user
    <set >
      <if test="createdNickName != null" >
        created_nick_name = #{createdNickName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null" >
        created_user_id = #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        created_user_name = #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="updatedNickName != null" >
        updated_nick_name = #{updatedNickName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null" >
        updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
      and skill_group_id = #{skillGroupId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cucsi.bsd.ucc.data.domain.SkillGroupUser" >
    update skill_group_user
    set created_nick_name = #{createdNickName,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user_id = #{createdUserId,jdbcType=VARCHAR},
      created_user_name = #{createdUserName,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      updated_nick_name = #{updatedNickName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
      and skill_group_id = #{skillGroupId,jdbcType=VARCHAR}
  </update>
</mapper>