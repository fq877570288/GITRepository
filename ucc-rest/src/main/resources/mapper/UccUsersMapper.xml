<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cucsi.bsd.ucc.common.mapper.UccUsersMapper" >
  <resultMap id="BaseResultMap" type="cn.cucsi.bsd.ucc.data.domain.UccUsers" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="address1" property="address1" jdbcType="VARCHAR" />
    <result column="address2" property="address2" jdbcType="VARCHAR" />
    <result column="address3" property="address3" jdbcType="VARCHAR" />
    <result column="address4" property="address4" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="created_nick_name" property="createdNickName" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_user_id" property="createdUserId" jdbcType="VARCHAR" />
    <result column="created_user_name" property="createdUserName" jdbcType="VARCHAR" />
    <result column="customfieldnames" property="customfieldnames" jdbcType="VARCHAR" />
    <result column="domain_id" property="domainId" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="error_count" property="errorCount" jdbcType="INTEGER" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="last_operate_desc" property="lastOperateDesc" jdbcType="VARCHAR" />
    <result column="last_operate_time" property="lastOperateTime" jdbcType="TIMESTAMP" />
    <result column="last_operate_user" property="lastOperateUser" jdbcType="INTEGER" />
    <result column="lock_time" property="lockTime" jdbcType="TIMESTAMP" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="reg_area" property="regArea" jdbcType="VARCHAR" />
    <result column="reg_from" property="regFrom" jdbcType="INTEGER" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="updated_nick_name" property="updatedNickName" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_user_id" property="updatedUserId" jdbcType="VARCHAR" />
    <result column="updated_user_name" property="updatedUserName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="teamsName" property="teamsName" jdbcType="VARCHAR" />
    <result column="teamsId" property="teamsId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, address1, address2, address3, address4, age, birthday, created_nick_name, 
    created_time, created_user_id, created_user_name, customfieldnames, domain_id, email, 
    error_count, last_login_ip, last_login_time, last_operate_desc, last_operate_time, 
    last_operate_user, lock_time, login_count, memo, mobile, nick_name, password, qq, 
    reg_area, reg_from, reg_ip, reg_time, sex, sign, tel, updated_nick_name, updated_time, 
    updated_user_id, updated_user_name, user_name, user_status, user_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ucc_users
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ucc_users
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.cucsi.bsd.ucc.data.domain.UccUsers" >
    insert into ucc_users (user_id, address1, address2, 
      address3, address4, age, 
      birthday, created_nick_name, created_time, 
      created_user_id, created_user_name, customfieldnames, 
      domain_id, email, error_count, 
      last_login_ip, last_login_time, last_operate_desc, 
      last_operate_time, last_operate_user, lock_time, 
      login_count, memo, mobile, 
      nick_name, password, qq, 
      reg_area, reg_from, reg_ip, 
      reg_time, sex, sign, 
      tel, updated_nick_name, updated_time, 
      updated_user_id, updated_user_name, user_name, 
      user_status, user_type)
    values (#{userId,jdbcType=VARCHAR}, #{address1,jdbcType=VARCHAR}, #{address2,jdbcType=VARCHAR}, 
      #{address3,jdbcType=VARCHAR}, #{address4,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{birthday,jdbcType=TIMESTAMP}, #{createdNickName,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdUserId,jdbcType=VARCHAR}, #{createdUserName,jdbcType=VARCHAR}, #{customfieldnames,jdbcType=VARCHAR}, 
      #{domainId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{errorCount,jdbcType=INTEGER}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastOperateDesc,jdbcType=VARCHAR}, 
      #{lastOperateTime,jdbcType=TIMESTAMP}, #{lastOperateUser,jdbcType=INTEGER}, #{lockTime,jdbcType=TIMESTAMP}, 
      #{loginCount,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{regArea,jdbcType=VARCHAR}, #{regFrom,jdbcType=INTEGER}, #{regIp,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=INTEGER}, #{sign,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{updatedNickName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedUserId,jdbcType=VARCHAR}, #{updatedUserName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.cucsi.bsd.ucc.data.domain.UccUsers" >
    insert into ucc_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="address1 != null" >
        address1,
      </if>
      <if test="address2 != null" >
        address2,
      </if>
      <if test="address3 != null" >
        address3,
      </if>
      <if test="address4 != null" >
        address4,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="createdNickName != null" >
        created_nick_name,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUserId != null" >
        created_user_id,
      </if>
      <if test="createdUserName != null" >
        created_user_name,
      </if>
      <if test="customfieldnames != null" >
        customfieldnames,
      </if>
      <if test="domainId != null" >
        domain_id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="errorCount != null" >
        error_count,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="lastOperateDesc != null" >
        last_operate_desc,
      </if>
      <if test="lastOperateTime != null" >
        last_operate_time,
      </if>
      <if test="lastOperateUser != null" >
        last_operate_user,
      </if>
      <if test="lockTime != null" >
        lock_time,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="regArea != null" >
        reg_area,
      </if>
      <if test="regFrom != null" >
        reg_from,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="updatedNickName != null" >
        updated_nick_name,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedUserId != null" >
        updated_user_id,
      </if>
      <if test="updatedUserName != null" >
        updated_user_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="address1 != null" >
        #{address1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        #{address2,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        #{address3,jdbcType=VARCHAR},
      </if>
      <if test="address4 != null" >
        #{address4,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="createdNickName != null" >
        #{createdNickName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null" >
        #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="customfieldnames != null" >
        #{customfieldnames,jdbcType=VARCHAR},
      </if>
      <if test="domainId != null" >
        #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateDesc != null" >
        #{lastOperateDesc,jdbcType=VARCHAR},
      </if>
      <if test="lastOperateTime != null" >
        #{lastOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateUser != null" >
        #{lastOperateUser,jdbcType=INTEGER},
      </if>
      <if test="lockTime != null" >
        #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="regArea != null" >
        #{regArea,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null" >
        #{regFrom,jdbcType=INTEGER},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="updatedNickName != null" >
        #{updatedNickName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null" >
        #{updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cucsi.bsd.ucc.data.domain.UccUsers" >
    update ucc_users
    <set >
      <if test="address1 != null" >
        address1 = #{address1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null" >
        address2 = #{address2,jdbcType=VARCHAR},
      </if>
      <if test="address3 != null" >
        address3 = #{address3,jdbcType=VARCHAR},
      </if>
      <if test="address4 != null" >
        address4 = #{address4,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="createdNickName != null" >
        created_nick_name = #{createdNickName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null" >
        created_user_id = #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        created_user_name = #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="customfieldnames != null" >
        customfieldnames = #{customfieldnames,jdbcType=VARCHAR},
      </if>
      <if test="domainId != null" >
        domain_id = #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        error_count = #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateDesc != null" >
        last_operate_desc = #{lastOperateDesc,jdbcType=VARCHAR},
      </if>
      <if test="lastOperateTime != null" >
        last_operate_time = #{lastOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateUser != null" >
        last_operate_user = #{lastOperateUser,jdbcType=INTEGER},
      </if>
      <if test="lockTime != null" >
        lock_time = #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="regArea != null" >
        reg_area = #{regArea,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null" >
        reg_from = #{regFrom,jdbcType=INTEGER},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="updatedNickName != null" >
        updated_nick_name = #{updatedNickName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null" >
        updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cucsi.bsd.ucc.data.domain.UccUsers" >
    update ucc_users
    set address1 = #{address1,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      address3 = #{address3,jdbcType=VARCHAR},
      address4 = #{address4,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      created_nick_name = #{createdNickName,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user_id = #{createdUserId,jdbcType=VARCHAR},
      created_user_name = #{createdUserName,jdbcType=VARCHAR},
      customfieldnames = #{customfieldnames,jdbcType=VARCHAR},
      domain_id = #{domainId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      error_count = #{errorCount,jdbcType=INTEGER},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_operate_desc = #{lastOperateDesc,jdbcType=VARCHAR},
      last_operate_time = #{lastOperateTime,jdbcType=TIMESTAMP},
      last_operate_user = #{lastOperateUser,jdbcType=INTEGER},
      lock_time = #{lockTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      reg_area = #{regArea,jdbcType=VARCHAR},
      reg_from = #{regFrom,jdbcType=INTEGER},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=INTEGER},
      sign = #{sign,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      updated_nick_name = #{updatedNickName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <!-- 查询坐席数-->
  <select id="querySeater" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UccUserCriteria" >
    SELECT DISTINCT(ucu.user_name),urp.permission_name,urp.route,ucu.domain_id
    FROM `ucc_users` ucu
    LEFT JOIN
    (
    SELECT ur.user_id,ur.role_id,ucr.role_name
    FROM user_role ur
    LEFT JOIN ucc_roles ucr
    ON ur.role_id=ucr.role_id
    )uur
    ON ucu.user_id=uur.user_id
    LEFT JOIN
    (
    SELECT rp.role_id,up.permission_name,up.route
    FROM roles_permissions rp
    LEFT JOIN ucc_permissions up
    ON rp.permission_id=up.permission_id
    )urp
    ON uur.role_id=urp.role_id
    WHERE 1=1 AND urp.route='/seater'
    <if test="domainId != null and domainId!=''" >
      AND ucu.domain_id = #{domainId,jdbcType=VARCHAR}
    </if>
  </select>
  <!--<select id="findByUccUserCriteria" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UserCriteria" >
    select
    <include refid="Base_Column_List" />
    from ucc_users
    LEFT JOIN
    (
    SELECT ud.user_id,uccd.dept_name,uccd.dept_id
    FROM user_dept ud
    LEFT JOIN ucc_depts uccd
    ON ud.dept_id=uccd.dept_id
    ) dept ON uu.user_id=dept.dept_id
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>-->

  <!-- 根据用户名、密码获取用户列表（APP登录用） add by wangxiaoyu 2018-09-10-->
  <select id="userLoginForAPP" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UserLoginForAPPCriteria" >
    SELECT
        uu.* ,ext.ext_num,ext.isdefault
    FROM
        ucc_users as uu
    LEFT JOIN (
        SELECT
            ue.user_id,
        ue.isdefault,
            pe.ext_num
        FROM
            user_ext ue
        LEFT JOIN pbx_exts as pe ON ue.ext_id = pe.ext_id
    )as ext ON uu.user_id = ext.user_id
    WHERE
        1 = 1
    and uu.user_name = #{userName,jdbcType=VARCHAR}
    and uu.`password` = #{password,jdbcType=VARCHAR}

  </select>

  <!--  修改用户自定义显示字段 -->
  <update id="cusfsSave" parameterType="java.util.Map">
    update ucc_users
    set
    customfieldNames = #{customfieldNames,jdbcType=VARCHAR}
    where id =
    #{userId,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey2" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
	  a.*, d.ext_num
    FROM
        ucc_users a
    LEFT JOIN user_ext as ue on ue.user_id = a.user_id
    LEFT JOIN pbx_exts d ON d.ext_id =  ue.ext_id and d.domain_id = a.domain_id
    WHERE
    a.user_id = #{id,jdbcType=VARCHAR}
  </select>


  <select id="selectByDept" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UserDeptCriteria">
    SELECT
    u.user_id,u.nick_name,u.user_name
    FROM
    ucc_users u
    INNER JOIN user_dept d ON u.user_id = d.user_id
    WHERE
    d.dept_id = #{deptId,jdbcType=VARCHAR}
    AND u.domain_id= #{domainId,jdbcType=VARCHAR}
  </select>

  <!--  根据UserID查询本部门下的所有用户ID by wangxiaoyu -->
  <select id="selectSameDeptUserIdByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT
	  DISTINCT a.user_id
    FROM
        ucc_users a
        LEFT JOIN user_dept b ON a.user_id = b.user_id
        LEFT JOIN ucc_depts c ON c.dept_id = b.dept_id
    WHERE a.user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <!-- 查询班组成员列表 -->
  <select id="selectTeamUserByDomainId" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UccUserCriteria" >
    SELECT
        uu.*,
      GROUP_CONCAT(
            teams.team_name SEPARATOR ","
        ) AS teamsName,
      GROUP_CONCAT(
      teams.team_id SEPARATOR ","
      ) AS teamsId
    FROM
        ucc_users uu
    LEFT JOIN (
        SELECT
            tu.user_id,
            ut.team_name,
            ut.team_id
        FROM
            team_users tu
        INNER JOIN ucc_teams ut ON tu.team_id = ut.team_id
    ) teams ON teams.user_id = uu.user_id
    WHERE 1=1
        AND  teams.team_name != ""
        <if test="domainId != null and domainId!=''" >
          AND uu.domain_id =#{domainId,jdbcType=VARCHAR}
        </if>
        <if test="teamId != null and teamId!=''" >
          AND teams.team_id =#{teamId,jdbcType=VARCHAR}
        </if>
        <if test="userName != null and userName!=''" >
          AND uu.user_name =#{userName,jdbcType=VARCHAR}
        </if>
        <if test="createdTimeStart != null ">
          and  DATE_FORMAT(uu.created_time,'%Y-%m-%d') &gt;= #{createdTimeStart}
        </if>
        <if test="createdTimeEnd != null ">
          and  DATE_FORMAT(uu.created_time,'%Y-%m-%d') &lt;= #{createdTimeEnd}
        </if>
    GROUP BY uu.user_id
    ORDER BY uu.created_time DESC
  </select>

  <!-- 查询不带班组信息的成员 -->
  <select id="selectNoTeamUserByDomainId" resultMap="BaseResultMap" parameterType="cn.cucsi.bsd.ucc.common.beans.UccUserCriteria" >
    SELECT
    uu.*
    FROM
    ucc_users uu
    LEFT JOIN (
    SELECT
    tu.user_id,
    ut.team_name
    FROM
    team_users tu
    INNER JOIN ucc_teams ut ON tu.team_id = ut.team_id
    ) teams ON teams.user_id = uu.user_id
    WHERE 1=1
    AND  teams.team_name IS NULL
    <if test="domainId != null and domainId!=''" >
      AND uu.domain_id =#{domainId,jdbcType=VARCHAR}
    </if>
  </select>


</mapper>